server:
  port: 8084

logging:
  level:
    root: INFO
    org.springframework.security: DEBUG
    org.springframework.beans.factory: ERROR
    org.springframework.security.web.csrf: DEBUG
    com.hantsylabs: INFO

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    csrf:
      enabled: true

spring:

  application:
    name: pharma
    admin:
      enabled: true

  ai:
    openai:
      api-key: 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

  cache:
    type: redis
    redis:
      time-to-live: 60000
      cache-null-values: true

  data:
    redis:
      database: 0
      repositories:
        enabled: false
      host: localhost
      port: 6379

  docker:
    compose:
      enabled: false
      file: compose.yaml

  datasource:
    url: ${APP_DB_URL}
    username: ${APP_DB_USER}
    password: ${APP_DB_PASS}
    driver-class-name: org.postgresql.Driver

  liquibase:
    change-log: classpath:db/db.changelog-master.yaml

  jpa:
    hibernate:
      ddl-auto:  update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    open-in-view: false
    defer-datasource-initialization: true

  sql:
    init:
      mode: never
  quartz:
    jdbc:
      initialize-schema: always
    job-store-type: jdbc
    properties:
      org:
        quartz:
          jobStore:
            driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
            isClustered: true
          scheduler:
            instanceId: AUTO
          threadPool:
            threadCount: 5

  security:
    oauth2:
      resourceserver:
        opaque-token:
          introspection-uri: ${GOOGLE_INTROSPECTION_URI}
          clientId: ${GOOGLE_CLIENT_ID}
          clientSecret: ${GOOGLE_CLIENT_SECRET}
        jwt:
          issuer-uri: https://accounts.google.com
          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

application:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      expiration: ${JWT_EXPIRATION_TIME}
      refresh-token:
        expiration: ${JWT_REFRESH_EXPIRATION_TIME}